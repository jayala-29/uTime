{"version":3,"sources":["meteor://ðŸ’»app/client/template.main.js","meteor://ðŸ’»app/client/main.jsx","meteor://ðŸ’»app/imports/api/tasks.js","meteor://ðŸ’»app/imports/startup/accounts-config.js","meteor://ðŸ’»app/imports/ui/AccountsUIWrapper.jsx","meteor://ðŸ’»app/imports/ui/App.jsx","meteor://ðŸ’»app/imports/ui/Task.jsx"],"names":[],"mappings":"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","file":"/app.js","sourcesContent":["\nTemplate.body.addContent((function() {\n  var view = this;\n  return HTML.Raw('<div id=\"render-target\"></div>');\n}));\nMeteor.startup(Template.body.renderToDocument);\n","import React from 'react';\r\nimport { Meteor } from 'meteor/meteor';\r\nimport { render } from 'react-dom';\r\n\r\nimport '../imports/startup/accounts-config.js';\r\nimport App from '../imports/ui/App.jsx';\r\n\r\nMeteor.startup(() => {\r\n  render(<App />, document.getElementById('render-target'));\r\n});","import { Meteor } from 'meteor/meteor';\r\nimport { Mongo } from 'meteor/mongo';\r\nimport { check } from 'meteor/check';\r\n\r\nexport const Tasks = new Mongo.Collection('tasks');\r\n\r\nif (Meteor.isServer) {\r\n  // This code only runs on the server\r\n  // Only publish tasks that are public or belong to the current user\r\n  Meteor.publish('tasks', function tasksPublication() {\r\n    return Tasks.find({ owner: this.userId });\r\n  });\r\n}\r\n\r\nMeteor.methods({\r\n  'tasks.insert'(text) {\r\n    check(text, String);\r\n\r\n    // Make sure the user is logged in before inserting a task\r\n    if (! this.userId) {\r\n      throw new Meteor.Error('not-authorized');\r\n    }\r\n\r\n    Tasks.insert({\r\n      text,\r\n      createdAt: new Date(),\r\n      owner: this.userId,\r\n      username: Meteor.users.findOne(this.userId).username,\r\n    });\r\n  },\r\n  'tasks.remove'(taskId) {\r\n    check(taskId, String);\r\n\r\n    const task = Tasks.findOne(taskId);\r\n    if (task.private && task.owner !== this.userId) {\r\n      // If the task is private, make sure only the owner can delete it\r\n      throw new Meteor.Error('not-authorized');\r\n    }\r\n\r\n    Tasks.remove(taskId);\r\n  },\r\n  'tasks.setChecked'(taskId, setChecked) {\r\n    check(taskId, String);\r\n    check(setChecked, Boolean);\r\n\r\n    const task = Tasks.findOne(taskId);\r\n    if (task.owner !== this.userId) {\r\n      // If the task is private, make sure only the owner can check it off\r\n      throw new Meteor.Error('not-authorized');\r\n    }\r\n\r\n    Tasks.update(taskId, { $set: { checked: setChecked } });\r\n  },\r\n  'tasks.edit'(taskId, text) {\r\n    check(taskId, String);\r\n    check(text, String);\r\n\r\n    const task = Tasks.findOne(taskId);\r\n    if (task.owner !== this.userId) {\r\n      throw new Meteor.Error('not-authorized');\r\n    }\r\n\r\n    Tasks.update(taskId, { $set: { text: text } });\r\n  },\r\n  /*\r\n  'tasks.setPrivate'(taskId, setToPrivate) {\r\n    check(taskId, String);\r\n    check(setToPrivate, Boolean);\r\n\r\n    const task = Tasks.findOne(taskId);\r\n\r\n    // Make sure only the task owner can make a task private\r\n    if (task.owner !== this.userId) {\r\n      throw new Meteor.Error('not-authorized');\r\n    }\r\n\r\n    Tasks.update(taskId, { $set: { private: setToPrivate } });\r\n  },\r\n  */\r\n});","import { Accounts } from 'meteor/accounts-base';\r\n\r\nAccounts.ui.config({\r\n  passwordSignupFields: 'USERNAME_ONLY',\r\n});","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Template } from 'meteor/templating';\r\nimport { Blaze } from 'meteor/blaze';\r\n\r\nexport default class AccountsUIWrapper extends Component {\r\n  componentDidMount() {\r\n    // Use Meteor Blaze to render login buttons\r\n    this.view = Blaze.render(Template.loginButtons,\r\n      ReactDOM.findDOMNode(this.refs.container));\r\n  }\r\n  componentWillUnmount() {\r\n    // Clean up Blaze view\r\n    Blaze.remove(this.view);\r\n  }\r\n  render() {\r\n    // Just render a placeholder container that will be filled in\r\n    return <span ref=\"container\" />;\r\n  }\r\n}","import React, { Component, PropTypes } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { createContainer } from 'meteor/react-meteor-data';\r\n\r\nimport { Tasks } from '../api/tasks.js';\r\n\r\nimport Task from './Task.jsx';\r\nimport AccountsUIWrapper from './AccountsUIWrapper.jsx';\r\n\r\n// App component - represents the whole app\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      hideCompleted: false,\r\n    };\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    // Find the text field via the React ref\r\n    const text = ReactDOM.findDOMNode(this.refs.textInput).value.trim();\r\n\r\n    Meteor.call('tasks.insert', text);\r\n\r\n    // Clear form\r\n    ReactDOM.findDOMNode(this.refs.textInput).value = '';\r\n  }\r\n\r\n  toggleHideCompleted() {\r\n    this.setState({\r\n      hideCompleted: !this.state.hideCompleted,\r\n    });\r\n  }\r\n\r\n  renderTasks() {\r\n    let filteredTasks = this.props.tasks;\r\n    if (this.state.hideCompleted) {\r\n      filteredTasks = filteredTasks.filter(task => !task.checked);\r\n    }\r\n    /*\r\n    return filteredTasks.map((task) => (\r\n      <Task key={task._id} task={task} />\r\n    ));\r\n    */\r\n    if (this.props.currentUser) {\r\n      return filteredTasks.map((task) => {\r\n        const currentUserId = this.props.currentUser && this.props.currentUser._id;\r\n\r\n        if (task.owner == currentUserId) {\r\n          return (\r\n            <Task\r\n              key={task._id}\r\n              task={task}\r\n            />\r\n          );\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <header>\r\n          <h1>Todo List ({this.props.incompleteCount})</h1>\r\n          \r\n          <label className=\"hide-completed\">\r\n            <input\r\n              type=\"checkbox\"\r\n              readOnly\r\n              checked={this.state.hideCompleted}\r\n              onClick={this.toggleHideCompleted.bind(this)}\r\n            />\r\n            Hide Completed Tasks\r\n          </label>\r\n\r\n          <AccountsUIWrapper />\r\n\r\n          { this.props.currentUser ?\r\n            <form className=\"new-task\" onSubmit={this.handleSubmit.bind(this)}>\r\n              <input\r\n                type=\"text\"\r\n                ref=\"textInput\"\r\n                placeholder=\"Type to add new tasks\"\r\n              />\r\n            </form> : ''\r\n          }\r\n        </header>\r\n\r\n        <ul>\r\n          { this.props.currentUser ?\r\n            this.renderTasks() : ''\r\n          }\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nApp.propTypes = {\r\n  tasks: PropTypes.array.isRequired,\r\n  incompleteCount: PropTypes.number.isRequired,\r\n  currentUser: PropTypes.object,\r\n};\r\n\r\nexport default createContainer(() => {\r\n  Meteor.subscribe('tasks');\r\n\r\n  return {\r\n    tasks: Tasks.find({}, { sort: { createdAt: -1 } }).fetch(),\r\n    incompleteCount: Tasks.find({ username: Meteor.user() ? Meteor.user().username : null, checked: { $ne: true } }).count(),\r\n    currentUser: Meteor.user(),\r\n  };\r\n}, App);","import React, { Component, PropTypes } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Meteor } from 'meteor/meteor';\r\n\r\n// Task component - represents a single todo item\r\nexport default class Task extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      editTask: false,\r\n    };\r\n  }\r\n\r\n  toggleChecked() {\r\n    // Set the checked property to the opposite of its current value\r\n    Meteor.call('tasks.setChecked', this.props.task._id, !this.props.task.checked);\r\n  }\r\n\r\n  setEdit() {\r\n    this.setState({\r\n      editTask: true,\r\n    });\r\n  }\r\n\r\n  deleteThisTask() {\r\n    Meteor.call('tasks.remove', this.props.task._id);\r\n  }\r\n\r\n  editThisTask(event) {\r\n    this.setState({\r\n      editTask: false,\r\n    });\r\n\r\n    event.preventDefault();\r\n\r\n    const text = ReactDOM.findDOMNode(this.refs.editInput).value.trim();\r\n\r\n    Meteor.call('tasks.edit', this.props.task._id, text);\r\n\r\n  }\r\n\r\n  handleFocus() {\r\n    this.refs.editInput.focus();\r\n  }\r\n\r\n  render() {\r\n    // Give tasks a different className when they are checked off,\r\n    // so that we can style them nicely in CSS\r\n    const taskClassName = this.props.task.checked ? 'checked' : '';\r\n\r\n    return (\r\n      <li className={taskClassName}>\r\n        { !this.state.editTask ?\r\n          <button className=\"delete\" onClick={this.deleteThisTask.bind(this)}>\r\n            &times;\r\n          </button> : ''\r\n        }\r\n\r\n        { !this.state.editTask ?\r\n          <button className=\"edit\" onClick={this.setEdit.bind(this)}>\r\n            Edit\r\n          </button> :\r\n\r\n          <form className=\"text\" onSubmit={this.editThisTask.bind(this)}>\r\n            <input\r\n              type=\"text\"\r\n              autoFocus\r\n              ref=\"editInput\"\r\n              defaultValue={this.props.task.text}\r\n              onfocus={this.handleFocus}\r\n            />\r\n          </form>\r\n        }\r\n\r\n        { !this.state.editTask ?\r\n          <input\r\n            type=\"checkbox\"\r\n            readOnly\r\n            checked={this.props.task.checked}\r\n            onClick={this.toggleChecked.bind(this)}\r\n          /> : ''\r\n        }\r\n\r\n        { !this.state.editTask ?\r\n          <span className=\"text\">\r\n            {this.props.task.text}\r\n          </span> : ''\r\n        }\r\n\r\n      </li>\r\n    );\r\n\r\n  }\r\n}\r\n\r\nTask.propTypes = {\r\n  // This component gets the task to display through a React prop.\r\n  // We can use propTypes to indicate it is required\r\n  task: PropTypes.object.isRequired,\r\n};"]}