{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"meteor/mongo","imported":["Mongo"],"specifiers":[{"kind":"named","imported":"Mongo","local":"Mongo"}]},{"source":"meteor/check","imported":["check"],"specifiers":[{"kind":"named","imported":"check","local":"check"}]}],"exports":{"exported":["Tasks"],"specifiers":[{"kind":"local","local":"Tasks","exported":"Tasks"}]}}},"options":{"filename":"/imports/api/tasks.js","filenameRelative":"/imports/api/tasks.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/api/tasks.js.map","sourceFileName":"/imports/api/tasks.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"tasks"},"ignored":false,"code":"exports.__esModule = true;\nexports.Tasks = undefined;\n\nvar _meteor = require('meteor/meteor');\n\nvar _mongo = require('meteor/mongo');\n\nvar _check = require('meteor/check');\n\nvar Tasks = exports.Tasks = new _mongo.Mongo.Collection('tasks');\n\nif (_meteor.Meteor.isServer) {\n  // This code only runs on the server\n  _meteor.Meteor.publish('tasks', function () {\n    function tasksPublication() {\n      return Tasks.find();\n    }\n\n    return tasksPublication;\n  }());\n}\n\n_meteor.Meteor.methods({\n  'tasks.insert': function () {\n    function tasksInsert(text) {\n      (0, _check.check)(text, String);\n\n      // Make sure the user is logged in before inserting a task\n      if (!_meteor.Meteor.userId()) {\n        throw new _meteor.Meteor.Error('not-authorized');\n      }\n\n      Tasks.insert({\n        text: text,\n        createdAt: new Date(),\n        owner: _meteor.Meteor.userId(),\n        username: _meteor.Meteor.user().username\n      });\n    }\n\n    return tasksInsert;\n  }(),\n  'tasks.remove': function () {\n    function tasksRemove(taskId) {\n      (0, _check.check)(taskId, String);\n\n      Tasks.remove(taskId);\n    }\n\n    return tasksRemove;\n  }(),\n  'tasks.setChecked': function () {\n    function tasksSetChecked(taskId, setChecked) {\n      (0, _check.check)(taskId, String);\n      (0, _check.check)(setChecked, Boolean);\n\n      Tasks.update(taskId, { $set: { checked: setChecked } });\n    }\n\n    return tasksSetChecked;\n  }()\n});","ast":null,"map":{"version":3,"sources":["/imports/api/tasks.js"],"names":[],"mappings":";;;AAAA;;AACA;;AACA;;AAEO,IAAM,wBAAQ,IAAI,aAAM,UAAN,CAAiB,OAArB,CAAR;;AAEb,IAAI,eAAO,QAAP,EAAiB;;AAEnB,iBAAO,OAAP,CAAe,OAAf;AAAwB,aAAS,gBAAT,GAA4B;AAClD,aAAO,MAAM,IAAN,EAAP,CADkD;KAA5B;;WAAS;KAAjC,EAFmB;CAArB;;AAOA,eAAO,OAAP,CAAe;AACb;yBAAe,MAAM;AACnB,wBAAM,IAAN,EAAY,MAAZ;;;AADmB,UAIf,CAAE,eAAO,MAAP,EAAF,EAAmB;AACrB,cAAM,IAAI,eAAO,KAAP,CAAa,gBAAjB,CAAN,CADqB;OAAvB;;AAIA,YAAM,MAAN,CAAa;AACX,kBADW;AAEX,mBAAW,IAAI,IAAJ,EAAX;AACA,eAAO,eAAO,MAAP,EAAP;AACA,kBAAU,eAAO,IAAP,GAAc,QAAd;OAJZ,EARmB;;;;KADR;AAgBb;yBAAe,QAAQ;AACrB,wBAAM,MAAN,EAAc,MAAd,EADqB;;AAGrB,YAAM,MAAN,CAAa,MAAb,EAHqB;;;;KAhBV;AAqBb;6BAAmB,QAAQ,YAAY;AACrC,wBAAM,MAAN,EAAc,MAAd,EADqC;AAErC,wBAAM,UAAN,EAAkB,OAAlB,EAFqC;;AAIrC,YAAM,MAAN,CAAa,MAAb,EAAqB,EAAE,MAAM,EAAE,SAAS,UAAT,EAAR,EAAvB,EAJqC;;;;KArB1B;CAAf","file":"/imports/api/tasks.js.map","sourcesContent":["import { Meteor } from 'meteor/meteor';\r\nimport { Mongo } from 'meteor/mongo';\r\nimport { check } from 'meteor/check';\r\n \r\nexport const Tasks = new Mongo.Collection('tasks');\r\n\r\nif (Meteor.isServer) {\r\n  // This code only runs on the server\r\n  Meteor.publish('tasks', function tasksPublication() {\r\n    return Tasks.find();\r\n  });\r\n}\r\n \r\nMeteor.methods({\r\n  'tasks.insert'(text) {\r\n    check(text, String);\r\n \r\n    // Make sure the user is logged in before inserting a task\r\n    if (! Meteor.userId()) {\r\n      throw new Meteor.Error('not-authorized');\r\n    }\r\n \r\n    Tasks.insert({\r\n      text,\r\n      createdAt: new Date(),\r\n      owner: Meteor.userId(),\r\n      username: Meteor.user().username,\r\n    });\r\n  },\r\n  'tasks.remove'(taskId) {\r\n    check(taskId, String);\r\n \r\n    Tasks.remove(taskId);\r\n  },\r\n  'tasks.setChecked'(taskId, setChecked) {\r\n    check(taskId, String);\r\n    check(setChecked, Boolean);\r\n \r\n    Tasks.update(taskId, { $set: { checked: setChecked } });\r\n  },\r\n});"]},"hash":"6739c04e0c6bd33cb9caa9b8a82dd62994f653fa"}
