{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"meteor/templating","imported":["Template"],"specifiers":[{"kind":"named","imported":"Template","local":"Template"}]},{"source":"meteor/reactive-dict","imported":["ReactiveDict"],"specifiers":[{"kind":"named","imported":"ReactiveDict","local":"ReactiveDict"}]},{"source":"../api/tasks.js","imported":["Tasks"],"specifiers":[{"kind":"named","imported":"Tasks","local":"Tasks"}]},{"source":"./task.js","imported":[],"specifiers":[]},{"source":"./body.html","imported":[],"specifiers":[]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/ui/body.js","filenameRelative":"/imports/ui/body.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/ui/body.js.map","sourceFileName":"/imports/ui/body.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"body"},"ignored":false,"code":"var _meteor = require('meteor/meteor');\n\nvar _templating = require('meteor/templating');\n\nvar _reactiveDict = require('meteor/reactive-dict');\n\nvar _tasks = require('../api/tasks.js');\n\nrequire('./task.js');\n\nrequire('./body.html');\n\n_templating.Template.body.onCreated(function () {\n  function bodyOnCreated() {\n    this.state = new _reactiveDict.ReactiveDict();\n    _meteor.Meteor.subscribe('tasks');\n  }\n\n  return bodyOnCreated;\n}());\n\n_templating.Template.body.helpers({\n  tasks: function () {\n    function tasks() {\n      var instance = _templating.Template.instance();\n      if (instance.state.get('hideCompleted')) {\n        // If hide completed is checked, filter tasks\n        return _tasks.Tasks.find({ checked: { $ne: true } }, { sort: { createdAt: -1 } });\n      }\n      // Otherwise, return all of the tasks\n      return _tasks.Tasks.find({}, { sort: { createdAt: -1 } });\n    }\n\n    return tasks;\n  }(),\n  incompleteCount: function () {\n    function incompleteCount() {\n      return _tasks.Tasks.find({ checked: { $ne: true } }).count();\n    }\n\n    return incompleteCount;\n  }()\n});\n\n_templating.Template.body.events({\n  'submit .new-task': function () {\n    function submitNewTask(event) {\n      // Prevent default browser form submit\n      event.preventDefault();\n\n      // Get value from form element\n      var target = event.target;\n      var text = target.text.value;\n\n      // Insert a task into the collection\n      _meteor.Meteor.call('tasks.insert', text);\n\n      // Clear form\n      target.text.value = '';\n    }\n\n    return submitNewTask;\n  }(),\n  'change .hide-completed input': function () {\n    function changeHideCompletedInput(event, instance) {\n      instance.state.set('hideCompleted', event.target.checked);\n    }\n\n    return changeHideCompletedInput;\n  }()\n});","ast":null,"map":{"version":3,"sources":["/imports/ui/body.js"],"names":[],"mappings":"AAAA;;AACA;;AACA;;AAEA;;AAEA;;AACA;;AAEA,qBAAS,IAAT,CAAc,SAAd;AAAwB,WAAS,aAAT,GAAyB;AAC/C,SAAK,KAAL,GAAa,gCAAb,CAD+C;AAE/C,mBAAO,SAAP,CAAiB,OAAjB,EAF+C;GAAzB;;SAAS;GAAjC;;AAKA,qBAAS,IAAT,CAAc,OAAd,CAAsB;AACpB;qBAAQ;AACN,UAAM,WAAW,qBAAS,QAAT,EAAX,CADA;AAEN,UAAI,SAAS,KAAT,CAAe,GAAf,CAAmB,eAAnB,CAAJ,EAAyC;;AAEvC,eAAO,aAAM,IAAN,CAAW,EAAE,SAAS,EAAE,KAAK,IAAL,EAAX,EAAb,EAAuC,EAAE,MAAM,EAAE,WAAW,CAAC,CAAD,EAAnB,EAAzC,CAAP,CAFuC;OAAzC;;AAFM,aAOC,aAAM,IAAN,CAAW,EAAX,EAAe,EAAE,MAAM,EAAE,WAAW,CAAC,CAAD,EAAnB,EAAjB,CAAP,CAPM;;;;KADY;AAUpB;+BAAkB;AAChB,aAAO,aAAM,IAAN,CAAW,EAAE,SAAS,EAAE,KAAK,IAAL,EAAX,EAAb,EAAuC,KAAvC,EAAP,CADgB;;;;KAVE;CAAtB;;AAeA,qBAAS,IAAT,CAAc,MAAd,CAAqB;AACnB;2BAAmB,OAAO;;AAExB,YAAM,cAAN;;;AAFwB,UAKlB,SAAS,MAAM,MAAN,CALS;AAMxB,UAAM,OAAO,OAAO,IAAP,CAAY,KAAZ;;;AANW,oBASxB,CAAO,IAAP,CAAY,cAAZ,EAA4B,IAA5B;;;AATwB,YAYxB,CAAO,IAAP,CAAY,KAAZ,GAAoB,EAApB,CAZwB;;;;KADP;AAenB;sCAA+B,OAAO,UAAU;AAC9C,eAAS,KAAT,CAAe,GAAf,CAAmB,eAAnB,EAAoC,MAAM,MAAN,CAAa,OAAb,CAApC,CAD8C;;;;KAf7B;CAArB","file":"/imports/ui/body.js.map","sourcesContent":["import { Meteor } from 'meteor/meteor';\r\nimport { Template } from 'meteor/templating';\r\nimport { ReactiveDict } from 'meteor/reactive-dict';\r\n\r\nimport { Tasks } from '../api/tasks.js';\r\n\r\nimport './task.js';\r\nimport './body.html';\r\n\r\nTemplate.body.onCreated(function bodyOnCreated() {\r\n  this.state = new ReactiveDict();\r\n  Meteor.subscribe('tasks');\r\n});\r\n \r\nTemplate.body.helpers({\r\n  tasks() {\r\n    const instance = Template.instance();\r\n    if (instance.state.get('hideCompleted')) {\r\n      // If hide completed is checked, filter tasks\r\n      return Tasks.find({ checked: { $ne: true } }, { sort: { createdAt: -1 } });\r\n    }\r\n    // Otherwise, return all of the tasks\r\n    return Tasks.find({}, { sort: { createdAt: -1 } });\r\n  },\r\n  incompleteCount() {\r\n    return Tasks.find({ checked: { $ne: true } }).count();\r\n  }\r\n});\r\n \r\nTemplate.body.events({\r\n  'submit .new-task'(event) {\r\n    // Prevent default browser form submit\r\n    event.preventDefault();\r\n \r\n    // Get value from form element\r\n    const target = event.target;\r\n    const text = target.text.value;\r\n     \r\n    // Insert a task into the collection\r\n    Meteor.call('tasks.insert', text);\r\n \r\n    // Clear form\r\n    target.text.value = '';\r\n  },\r\n  'change .hide-completed input'(event, instance) {\r\n    instance.state.set('hideCompleted', event.target.checked);\r\n  },\r\n});"]},"hash":"695fefc0886bb68662265529965831c4e7c405c2"}
